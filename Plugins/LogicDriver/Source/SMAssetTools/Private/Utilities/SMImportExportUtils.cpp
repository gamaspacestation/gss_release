// Copyright Recursoft LLC 2019-2022. All Rights Reserved.

#include "SMImportExportUtils.h"

#include "Utilities/SMNodeInstanceUtils.h"

#include "UObject/UnrealType.h"

bool LD::ImportExportUtils::ShouldPropertyBeImportedOrExported(const FProperty* InProperty)
{
	check(InProperty);

	// Always include or exclude properties explicitly marked for export.
	if (InProperty->HasMetaData(TEXT("NoLogicDriverExport")))
	{
		return false;
	}

	if (InProperty->HasMetaData(TEXT("LogicDriverExport")))
	{
		return true;
	}

	// If this is in a container check if the owning property is valid to import or export.
	bool bInValidContainer = false;
	if (const FProperty* OwnerProperty = InProperty->GetOwnerProperty())
	{
		if (OwnerProperty != InProperty &&
			(OwnerProperty->IsA<FArrayProperty>()
				|| OwnerProperty->IsA<FMapProperty>()
				|| OwnerProperty->IsA<FSetProperty>()))
		{
			bInValidContainer = ShouldPropertyBeImportedOrExported(OwnerProperty);
		}
	}

	if (bInValidContainer ||
		// Always accept real graph properties, but avoid if this property was generated by the SMKismetCompiler.
		(FSMNodeInstanceUtils::IsPropertyGraphProperty(InProperty) && !InProperty->GetName().StartsWith(TEXT("LD_GEN_"))))
	{
		return true;
	}

	return (InProperty->HasAnyPropertyFlags(CPF_Edit) || InProperty->HasAnyPropertyFlags(CPF_BlueprintVisible) ||
			(InProperty->HasAnyPropertyFlags(CPF_ContainsInstancedReference))) &&
			!InProperty->HasAnyPropertyFlags(CPF_Transient) && !InProperty->HasMetaData(TEXT("InstancedTemplate"));
}
